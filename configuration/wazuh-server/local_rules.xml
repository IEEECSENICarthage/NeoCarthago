<!-- Local rules -->

<!-- Modify it at your will. -->
<!-- Copyright (C) 2015, Wazuh Inc. -->

<!-- Example -->
<group name="local,syslog,sshd,">
  <!-- Rule to detect failed SSH authentication from a specific IP address -->
  <rule id="100001" level="5">
    <if_sid>5716</if_sid>
    <srcip>1.1.1.1</srcip>
    <description>sshd: authentication failed from IP 1.1.1.1.</description>
    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>
  </rule>
</group>

<!-- Syscheck rules for file modifications in sensitive directories -->
<group name="syscheck,pci_dss_11.5,nist_800_53_SI.7,">
    <!-- Rule for modified files in the /root directory -->
    <rule id="100200" level="7">
        <if_sid>550</if_sid>
        <field name="file">/root</field>
        <description>File modified in /root directory.</description>
    </rule>
    <!-- Rule for added files in the /root directory -->
    <rule id="100201" level="7">
        <if_sid>554</if_sid>
        <field name="file">/root</field>
        <description>File added to /root directory.</description>
    </rule>
</group>

<!-- VirusTotal integration rules for threat removal status -->
<group name="virustotal,">
  <!-- Rule for successful threat removal -->
  <rule id="100092" level="12">
    <if_sid>657</if_sid>
    <match>Successfully removed threat</match>
    <description>$(parameters.program) removed threat located at $(parameters.alert.data.virustotal.source.file)</description>
  </rule>

  <!-- Rule for error during threat removal -->
  <rule id="100093" level="12">
    <if_sid>657</if_sid>
    <match>Error removing threat</match>
    <description>Error removing threat located at $(parameters.alert.data.virustotal.source.file)</description>
  </rule>
</group>

<!-- Duplicate VirusTotal rules (typically, this should be merged or reviewed for redundancy) -->
<group name="virustotal,">
  <!-- Rule for successful threat removal -->
  <rule id="100092" level="12">
      <if_sid>657</if_sid>
      <match>Successfully removed threat</match>
      <description>$(parameters.program) removed threat located at $(parameters.alert.data.virustotal.source.file)</description>
  </rule>

  <!-- Rule for error during threat removal -->
  <rule id="100093" level="12">
    <if_sid>657</if_sid>
    <match>Error removing threat</match>
    <description>Error removing threat located at $(parameters.alert.data.virustotal.source.file)</description>
  </rule>
</group>

<!-- Security event rules for detecting attacks on Windows systems -->
<group name="security_event, windows,">
 
  <!-- Rule for detecting DCSync attacks using Windows security events -->
  <rule id="110001" level="12">
    <if_sid>60103</if_sid>
    <field name="win.system.eventID">^4662$</field>
    <field name="win.eventdata.properties" type="pcre2">{1131f6aa-9c07-11d1-f79f-00c04fc2dcd2}|{19195a5b-6da0-11d0-afd3-00c04fd930c9}</field>
    <options>no_full_log</options>
    <description>Directory Service Access. Possible DCSync attack</description>
  </rule>
 
 <!-- Rule to ignore Directory Service Access originating from machine accounts with $ in their names -->
 <rule id="110009" level="0">
    <if_sid>60103</if_sid>
    <field name="win.system.eventID">^4662$</field>
    <field name="win.eventdata.properties" type="pcre2">{1131f6aa-9c07-11d1-f79f-00c04fc2dcd2}|{19195a5b-6da0-11d0-afd3-00c04fd930c9}</field>
    <field name="win.eventdata.SubjectUserName" type="pcre2">\$$</field>
    <options>no_full_log</options>
    <description>Ignore all Directory Service Access that is originated from a machine account containing $</description>
  </rule>
 
  <!-- Rule for detecting Keberoasting attacks using Windows security events -->
  <rule id="110002" level="12">
    <if_sid>60103</if_sid>
    <field name="win.system.eventID">^4769$</field>
    <field name="win.eventdata.TicketOptions" type="pcre2">0x40810000</field>
    <field name="win.eventdata.TicketEncryptionType" type="pcre2">0x17</field>
    <options>no_full_log</options>
    <description>Possible Keberoasting attack</description>
  </rule>
 
  <!-- Rule for detecting Golden Ticket attacks using Windows security events -->
  <rule id="110003" level="12">
    <if_sid>60103</if_sid>
    <field name="win.system.eventID">^4624$</field>
    <field name="win.eventdata.LogonGuid" type="pcre2">{00000000-0000-0000-0000-000000000000}</field>
    <field name="win.eventdata.logonType" type="pcre2">3</field>
    <options>no_full_log</options>
    <description>Possible Golden Ticket attack</description>
  </rule>
 
</group>

<!-- Linux-specific NMAP scan detection rules -->
<group name="linux,nmap,">
  <!-- Rule for detecting open ports and services with NMAP -->
  <rule id="100100" level="3">
    <decoded_as>json</decoded_as>
    <field name="nmap_port">\.+</field>
    <field name="nmap_port_service">\.+</field>
    <description>NMAP: Host scan. Port $(nmap_port) is open and hosting the $(nmap_port_service) service.</description>
    <options>no_full_log</options>
  </rule>
</group>

<!-- Additional NMAP rules for open port detections with Gemini integration -->
<group name="linux,gemini">
  <!-- Rule for detecting open ports with NMAP -->
  <rule id="100101" level="5">
    <if_sid>100100</if_sid>
    <field name="nmap_port">\d+</field>
    <description>NMAP: Host scan. Port $(nmap_port) is open.</description>
  </rule>

  <!-- Rule for detecting open ports without associated services -->
  <rule id="100103" level="5">
    <if_sid>100100</if_sid>
    <field name="nmap_port_service">^\s$</field>
    <description>NMAP: Port $(nmap_port) is open but no service is found.</description>
  </rule>
</group>

<!-- Local Linux rules with Gemini integration -->
<group name="local,linux,">
  <!-- Rule for monitoring services on open ports -->
  <rule id="100102" level="6">
    <field name="gemini.nmap_port_service">\w+</field>
    <description>The service $(gemini.nmap_port_service) is on an open port. Analysis: $(gemini.analysis)</description>
  </rule>
</group>
